[1mdiff --git a/index.html b/index.html[m
[1mindex c491b1c..79c4701 100644[m
[1m--- a/index.html[m
[1m+++ b/index.html[m
[36m@@ -2,9 +2,9 @@[m
 <html lang="en">[m
   <head>[m
     <meta charset="UTF-8" />[m
[31m-    <link rel="icon" type="image/svg+xml" href="/favicon-32x32.png" />[m
[32m+[m[32m    <link rel="icon" type="image/svg+xml" href="/vite.svg" />[m
     <meta name="viewport" content="width=device-width, initial-scale=1.0" />[m
[31m-    <title>TODO App</title>[m
[32m+[m[32m    <title>Vite + React</title>[m
   </head>[m
   <body>[m
     <div id="root"></div>[m
[1mdiff --git a/public/favicon-32x32.png b/public/favicon-32x32.png[m
[1mdeleted file mode 100644[m
[1mindex 1e2df7f..0000000[m
Binary files a/public/favicon-32x32.png and /dev/null differ
[1mdiff --git a/src/App.jsx b/src/App.jsx[m
[1mindex 22eae0b..33ce881 100644[m
[1m--- a/src/App.jsx[m
[1m+++ b/src/App.jsx[m
[36m@@ -1,125 +1,61 @@[m
[31m-import React, { useState } from "react";[m
[31m-import "../src/assets/sass/_app.scss";[m
[31m-import TodoForm from "./components/TodoForm";[m
[31m-import TodoItem from "./components/TodoItem";[m
[31m-import light from "./assets/images/icon-sun.svg";[m
[31m-import dark from "./assets/images/icon-moon.svg";[m
[31m-import { useSelector, useDispatch } from "react-redux";[m
[31m-import { deleteCompleted } from "./redux/todoSlice";[m
[32m+[m[32mimport React, { useState } from 'react';[m
[32m+[m[32mimport '../src/assets/sass/_app.scss';[m
[32m+[m[32mimport TodoForm from './components/TodoForm';[m
[32m+[m[32mimport TodoItem from './components/TodoItem';[m
[32m+[m[32mimport light from './assets/images/icon-sun.svg';[m
[32m+[m[32mimport dark from './assets/images/icon-moon.svg';[m
 [m
 function App() {[m
[31m-	const [mode, setMode] = useState(true);[m
[31m-	const [filters, setFilters] = useState("all");[m
[31m-[m
[31m-	const dispatch = useDispatch();[m
[31m-[m
[31m-	const todos = useSelector((state) => state.todos);[m
[31m-[m
[31m-	const itemsLeft = todos.filter((todo) => todo.completed !== true);[m
[31m-[m
[31m-	const handleModeChange = () => {[m
[31m-		setMode((prev) => !prev);[m
[31m-		if (mode) setDarkMode();[m
[31m-		else setLightMode();[m
[31m-	};[m
[31m-[m
[31m-	const setDarkMode = () => {[m
[31m-		document.querySelector("body").setAttribute("data-theme", "dark");[m
[31m-	};[m
[31m-[m
[31m-	const setLightMode = () => {[m
[31m-		document.querySelector("body").setAttribute("data-theme", "light");[m
[31m-	};[m
[31m-[m
[31m-	const clearCompleted = () => {[m
[31m-		dispatch(deleteCompleted());[m
[31m-	};[m
[31m-[m
[31m-	const renderTodoList = () => {[m
[31m-		switch (filters) {[m
[31m-			case "all":[m
[31m-				todos.map((todo) => [m
[31m-               <TodoItem[m
[31m-						id={todo.id}[m
[31m-						title={todo.title}[m
[31m-						completed={todo.completed}[m
[31m-					/>[m
[31m-				);[m
[31m-				break;[m
[31m-			case "active":[m
[31m-				todos[m
[31m-					.filter((todo) => todo.completed !== true)[m
[31m-					.map((todo) => [m
[31m-						<TodoItem[m
[31m-							id={todo.id}[m
[31m-							title={todo.title}[m
[31m-							completed={todo.completed}[m
[31m-						/>[m
[31m-					);[m
[31m-				break;[m
[31m-			case "completed":[m
[31m-				todos[m
[31m-					.filter((todo) => todo.completed === true)[m
[31m-					.map((todo) => [m
[31m-						<TodoItem[m
[31m-							id={todo.id}[m
[31m-							title={todo.title}[m
[31m-							completed={todo.completed}[m
[31m-						/>[m
[31m-					);[m
[31m-		}[m
[31m-	};[m
[31m-	console.log([m
[31m-		todos.filter((todo) => todo.completed === false).map((todo) => todo.id),[m
[31m-	);[m
[31m-[m
[31m-	return ([m
[31m-		<div className="app">[m
[31m-			<div className="app_container">[m
[31m-				<div className="app_heading">[m
[31m-					<h1>TODO</h1>[m
[31m-					<span>[m
[31m-						<img[m
[31m-							src={mode ? dark : light}[m
[31m-							alt="mode"[m
[31m-							onClick={handleModeChange}[m
[31m-						/>[m
[31m-					</span>[m
[31m-				</div>[m
[31m-				<TodoForm />[m
[31m-				<div className="app_status">[m
[31m-					{todos.map((todo) => ([m
[31m-						<TodoItem[m
[31m-							id={todo.id}[m
[31m-							title={todo.title}[m
[31m-							completed={todo.completed}[m
[31m-						/>[m
[31m-					))}[m
[31m-				</div>[m
[31m-				<div className="app_info">[m
[31m-					<p>{itemsLeft.length} items left</p>[m
[31m-					<div>[m
[31m-						<p[m
[31m-							className={filters === "all" && "active_filter"}[m
[31m-							onClick={() => setFilters("all")}>[m
[31m-							All[m
[31m-						</p>[m
[31m-						<p[m
[31m-							className={filters === "active" && "active_filter"}[m
[31m-							onClick={() => setFilters("active")}>[m
[31m-							Active[m
[31m-						</p>[m
[31m-						<p[m
[31m-							className={filters === "completed" && "active_filter"}[m
[31m-							onClick={() => setFilters("completed")}>[m
[31m-							Completed[m
[31m-						</p>[m
[32m+[m[32m  const [mode, setMode] = useState(true);[m
[32m+[m[32m  const handleModeChange = () => {[m
[32m+[m[32m     setMode(prev => !prev)[m
[32m+[m	[32m  if(mode) setDarkMode();[m
[32m+[m	[32m  else setLightMode();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  const setDarkMode = () => {[m
[32m+[m	[32mdocument.querySelector("body").setAttribute('data-theme', 'dark');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  const setLightMode = () => {[m
[32m+[m	[32mdocument.querySelector("body").setAttribute('data-theme', 'light');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m			[32m<div className="app">[m
[32m+[m				[32m<div className="app_container">[m
[32m+[m					[32m<div className="app_heading">[m
[32m+[m						[32m<h1>TODO</h1>[m
[32m+[m						[32m<span>[m
[32m+[m							[32m<img[m
[32m+[m								[32msrc={mode ? dark : light}[m
[32m+[m								[32malt="mode"[m
[32m+[m								[32monClick={handleModeChange}[m
[32m+[m							[32m/>[m
[32m+[m						[32m</span>[m
[32m+[m					[32m</div>[m
[32m+[m					[32m<TodoForm />[m
[32m+[m					[32m<div className="app_status">[m
[32m+[m						[32m<TodoItem />[m
[32m+[m						[32m<TodoItem />[m
[32m+[m						[32m<TodoItem />[m
[32m+[m						[32m<TodoItem />[m
[32m+[m					[32m</div>[m
[32m+[m					[32m<div className="app_info">[m
[32m+[m						[32m<p>items left</p>[m
[32m+[m						[32m<div>[m
[32m+[m							[32m<p>All</p>[m
[32m+[m							[32m<p>Active</p>[m
[32m+[m							[32m<p>Completed</p>[m
[32m+[m						[32m</div>[m
[32m+[m						[32m<p>Clear Completed</p>[m
 					</div>[m
[31m-					<p onClick={clearCompleted}>Clear Completed</p>[m
 				</div>[m
 			</div>[m
[31m-		</div>[m
[31m-	);[m
[32m+[m		[32m);[m
 }[m
 [m
[31m-export default App;[m
[32m+[m[32mexport default App;[m
\ No newline at end of file[m
[1mdiff --git a/src/assets/sass/_app.scss b/src/assets/sass/_app.scss[m
[1mindex 039feb1..1974448 100644[m
[1m--- a/src/assets/sass/_app.scss[m
[1m+++ b/src/assets/sass/_app.scss[m
[36m@@ -88,9 +88,6 @@[m
 			width: 180px;[m
 			display: flex;[m
 			justify-content: space-between;[m
[31m-			.active_filter{[m
[31m-				color: $primary;[m
[31m-			}[m
 		}[m
 		p{[m
 			&:hover{[m
[1mdiff --git a/src/assets/sass/_form.scss b/src/assets/sass/_form.scss[m
[1mindex e266721..e06295d 100644[m
[1m--- a/src/assets/sass/_form.scss[m
[1m+++ b/src/assets/sass/_form.scss[m
[36m@@ -5,7 +5,6 @@[m
 	--list_borderColor: hsl(234, 39%, 85%);[m
 	--text_color: hsl(237, 14%, 26%);[m
 	--placeholder: hsl(234, 11%, 52%);[m
[31m-	--btn_backColor:hsl(234, 39%,85%);[m
 }[m
 [m
 [data-theme="dark"]{[m
[36m@@ -13,14 +12,12 @@[m
 	--list_borderColor: hsl(233, 14%, 35%);[m
 	--text_color: hsl(234, 39%, 85%);[m
 	--placeholder: hsla(234, 11%, 52%, 0.8);[m
[31m-	--btn_backColor:hsl(234, 11%, 52%);[m
 }[m
 [m
 .form{[m
 	&_layout{[m
 		margin-top: 30px;[m
 		width: 100%;[m
[31m-		position: relative;[m
 	}[m
 	&_text{[m
 		width: 100%;[m
[36m@@ -37,23 +34,4 @@[m
 			color: var(--placeholder);[m
 		}[m
 	}[m
[31m-	&_btn{[m
[31m-		position: absolute;[m
[31m-		right: 10px;[m
[31m-		top: 8px;[m
[31m-		height: 40px;[m
[31m-		width: 40px;[m
[31m-		border-radius: 50%;[m
[31m-		border: none;[m
[31m-		font-size: 40px;[m
[31m-		font-weight: 300;[m
[31m-		transition: all 0.3s ease-in-out;[m
[31m-		color: var(--list_backColor);[m
[31m-		outline: none;[m
[31m-		background: linear-gradient(to bottom right, hsl(192, 100%, 67%), hsl(280, 87%, 65%));[m
[31m-		&:hover{[m
[31m-			opacity: 0.8;[m
[31m-			cursor: pointer;[m
[31m-		}[m
[31m-	}[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/assets/sass/_todo.scss b/src/assets/sass/_todo.scss[m
[1mindex f0cd203..5425178 100644[m
[1m--- a/src/assets/sass/_todo.scss[m
[1m+++ b/src/assets/sass/_todo.scss[m
[36m@@ -26,13 +26,8 @@[m
 	background: var(--list_backColor);[m
 	border-bottom: 1px solid var(--list_borderColor);[m
 [m
[31m-	.check_success{[m
[31m-		background: linear-gradient(to bottom right, hsl(192, 100%, 67%), hsl(280, 87%, 65%));[m
[31m-	}[m
[31m-[m
 	&_checkbox{[m
 		display: none;[m
[31m-		[m
 	}[m
 [m
 	&_check{[m
[36m@@ -45,9 +40,10 @@[m
 		justify-content: center;[m
 		transition: 0.5s ease-in-out;[m
 		//background: linear-gradient(to bottom right, hsl(192, 100%, 67%), hsl(280, 87%, 65%));[m
[31m-		[m
 		&:hover{[m
[31m-			border-color: hsl(280, 87%, 65%);[m
[32m+[m			[32mbackground: linear-gradient(var(--check_hoverBack), var(--check_hoverBack)) padding-box,[m
[32m+[m			[32m            linear-gradient(to bottom right, hsl(192, 100%, 67%), hsl(280, 87%, 65%)) border-box;[m
[32m+[m			[32mborder: 1px solid transparent;[m
 			border-radius: 50%;[m
 			cursor: pointer;[m
 		}[m
[36m@@ -61,11 +57,10 @@[m
 		margin-left: 25px;[m
 	}[m
 [m
[31m-	.img_cross{[m
[32m+[m	[32mimg{[m
 		display: none;[m
 		transition: 0.5s ease-in-out;[m
 	}[m
[31m-[m
 	&:hover{[m
 		cursor: pointer;[m
 		.img_cross{[m
[36m@@ -75,5 +70,14 @@[m
 				opacity: 0.6;[m
 			}[m
 		}[m
[32m+[m		[32m.todo_check{[m
[32m+[m			[32mbackground: linear-gradient(var(--check_hoverBack), var(--check_hoverBack)) padding-box,[m
[32m+[m			[32m            linear-gradient(to bottom right, hsl(192, 100%, 67%), hsl(280, 87%, 65%)) border-box;[m
[32m+[m			[32mborder: 1px solid transparent;[m
[32m+[m			[32mborder-radius: 50%;[m
[32m+[m			[32mcursor: pointer;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m[41m		[m
 	}[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/components/TodoForm.jsx b/src/components/TodoForm.jsx[m
[1mindex af43a3b..1360199 100644[m
[1m--- a/src/components/TodoForm.jsx[m
[1m+++ b/src/components/TodoForm.jsx[m
[36m@@ -4,19 +4,10 @@[m [mimport { addTodo } from '../redux/todoSlice';[m
 import '../assets/sass/_form.scss';[m
 [m
 function TodoForm() {[m
[31m-	const [value, setValue] = useState('');[m
[31m-[m
[32m+[m	[32mconst [value, setValue] = useState('')[m
 	const dispatch = useDispatch();[m
[31m-[m
[31m-	const onSubmit = (event) => {[m
[31m-		event.preventDefault();[m
[31m-		dispatch(addTodo({[m
[31m-			title: value,[m
[31m-		}));[m
[31m-	}[m
[31m-[m
 	return ([m
[31m-		<div className="form" onSubmit={onSubmit}>[m
[32m+[m		[32m<div className="form">[m
 			<form className='form_layout'>[m
 				<input[m
 					type="text"[m
[36m@@ -26,7 +17,6 @@[m [mfunction TodoForm() {[m
 					onChange={(event) => setValue(event.target.value)}>[m
 [m
 				</input>[m
[31m-				<button type='submit' className='form_btn'>+</button>[m
 			</form>[m
 		</div>[m
 	);[m
[1mdiff --git a/src/components/TodoItem.jsx b/src/components/TodoItem.jsx[m
[1mindex a5ebbba..4ff73bb 100644[m
[1m--- a/src/components/TodoItem.jsx[m
[1m+++ b/src/components/TodoItem.jsx[m
[36m@@ -2,54 +2,24 @@[m [mimport React from 'react';[m
 import '../assets/sass/_todo.scss';[m
 import cross from '../assets/images/icon-cross.svg';[m
 import checked from '../assets/images/icon-check.svg';[m
[31m-import { useDispatch } from 'react-redux';[m
[31m-import { toggleComplete } from '../redux/todoSlice';[m
[31m-import { deleteTodo } from '../redux/todoSlice';[m
 [m
[31m-function TodoItem({ id, title, completed}) {[m
[31m-	const dispatch = useDispatch();[m
[32m+[m[32mfunction TodoItem({id, title, completed}) {[m
[32m+[m	[32mconst handleCheckbox = () => {[m
 [m
[31m-	const handleCompleteClick = () => {[m
[31m-		dispatch(toggleComplete({[m
[31m-			id:id,[m
[31m-			completed: !completed,[m
[31m-		}))[m
 	} [m
[31m-[m
[31m-	const handleDeleteClick = () => {[m
[31m-		dispatch(deleteTodo({[m
[31m-			id: id,[m
[31m-		}))[m
[31m-	}[m
[31m-[m
 	return ([m
 		<li className="todo">[m
 			<input[m
 				type="checkbox"[m
[31m-				/* onChange={handleCompleteClick} */[m
[32m+[m				[32monClick={handleCheckbox}[m
 				checked={completed}[m
 				className="todo_checkbox"[m
[31m-				id="check_box"[m
[31m-			/>[m
[31m-			<label[m
[31m-				className={`todo_check ${completed && "check_success"}`}[m
[31m-				htmlFor="check_box"[m
[31m-				onClick={handleCompleteClick}>[m
[31m-				{completed && ([m
[31m-					<img[m
[31m-						src={checked}[m
[31m-						alt="check"[m
[31m-						className="img_check"[m
[31m-					/>[m
[31m-				)}[m
[31m-			</label>[m
[31m-			<p>{title}</p>[m
[31m-			<img[m
[31m-				src={cross}[m
[31m-				alt="X"[m
[31m-				className="img_cross"[m
[31m-				onClick={handleDeleteClick}[m
 			/>[m
[32m+[m			[32m<div className="todo_check">[m
[32m+[m				[32m<img src={checked} alt="check" />[m
[32m+[m			[32m</div>[m
[32m+[m			[32m<p>{title}title</p>[m
[32m+[m			[32m<img src={cross} alt="X" className='img_cross'/>[m
 		</li>[m
 	);[m
 }[m
[1mdiff --git a/src/redux/store.js b/src/redux/store.js[m
[1mindex 71374c9..f5dbd43 100644[m
[1m--- a/src/redux/store.js[m
[1m+++ b/src/redux/store.js[m
[36m@@ -3,7 +3,7 @@[m [mimport todoReducer from './todoSlice';[m
 [m
 const store = configureStore({[m
 	reducer: {[m
[31m-		todos: todoReducer,[m
[32m+[m		[32mtodo: todoReducer,[m
 	},[m
 });[m
 [m
[1mdiff --git a/src/redux/todoSlice.js b/src/redux/todoSlice.js[m
[1mindex ef16a66..db8e5f3 100644[m
[1m--- a/src/redux/todoSlice.js[m
[1m+++ b/src/redux/todoSlice.js[m
[36m@@ -4,37 +4,22 @@[m [mexport const todoSlice = createSlice({[m
 	name: "todos",[m
 	initialState: [[m
 		{ id: 1, title: "todo1", completed: false },[m
[31m-		{ id: 2, title: "todo2", completed: true},[m
[31m-		{ id: 3, title: "todo3", completed: true },[m
[32m+[m		[32m{ id: 2, title: "todo2", completed: false },[m
[32m+[m		[32m{ id: 3, title: "todo3", completed: false },[m
 		{ id: 4, title: "todo4", completed: false },[m
 	],[m
 	reducers: {[m
 		addTodo: (state, action) => {[m
[31m-			const newTodo = {[m
[31m-				id: Date.now(),[m
[32m+[m			[32mconst todo = {[m
[32m+[m				[32mid: new Date(),[m
 				title: action.payload.title,[m
 				completed: false,[m
 			};[m
[31m-			state.push(newTodo);[m
[31m-		},[m
[31m-		toggleComplete: (state, action) => {[m
[31m-			const index = state.findIndex(todo => todo.id === action.payload.id);[m
[31m-			state[index].completed = action.payload.completed;[m
[31m-		},[m
[31m-		deleteTodo: (state, action) => {[m
[31m-			return state.filter(todo => todo.id !== action.payload.id);[m
[31m-		},[m
[31m-		deleteCompleted: (state, action) => {[m
[31m-			return state.filter(todo => todo.completed !== true)	[m
[32m+[m			[32mstate.push(todo);[m
 		}[m
 	}[m
 });[m
 [m
[31m-export const { [m
[31m-	addTodo,[m
[31m-	toggleComplete,[m
[31m-	deleteTodo, [m
[31m-	deleteCompleted,[m
[31m-} = todoSlice.actions;[m
[32m+[m[32mexport const {addTodo} = todoSlice.actions;[m
 [m
 export default todoSlice.reducer;[m
\ No newline at end of file[m
